version: '3.8'

services:
  # Nginx Web Server
  nginx:
    image: nginx:alpine
    container_name: cp-store-nginx
    ports:
      - "8080:80"
    volumes:
      - ./src:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
    networks:
      - cp-store-network

  # PHP-FPM
  php:
    build:
      context: ./docker/php
      dockerfile: Dockerfile
    container_name: cp-store-php
    volumes:
      - ./src:/var/www/html
    depends_on:
      - mysql
      - mysql-test
      - redis
    networks:
      - cp-store-network
    env_file:
      - .env
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379

  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: cp-store-mysql
    ports:
      - "3306:3306"
    env_file:
      - .env
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - cp-store-network

  mysql-test:
    image: mysql:8.0
    container_name: cp-store-mysql-test
    env_file:
      - .env
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE_TEST}
      MYSQL_USER: ${DB_USERNAME_TEST}
      MYSQL_PASSWORD: ${DB_PASSWORD_TEST}
    volumes:
      - mysql_data_test:/var/lib/mysql
    networks:
      - cp-store-network

  # Redis
  redis:
    image: redis:alpine
    container_name: cp-store-redis
    ports:
      - "6379:6379"
    networks:
      - cp-store-network

  # phpMyAdmin (optional)
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: cp-store-phpmyadmin
    ports:
      - "8081:80"
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    depends_on:
      - mysql
    networks:
      - cp-store-network

volumes:
  mysql_data:
  mysql_data_test:

networks:
  cp-store-network:
    driver: bridge 